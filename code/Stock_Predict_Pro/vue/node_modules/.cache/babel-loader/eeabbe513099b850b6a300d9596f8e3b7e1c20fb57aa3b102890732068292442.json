{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Hot Stocks\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.hotStocks, stock => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: stock.stock_symbol\n    }, [_createTextVNode(_toDisplayString(stock.stock_symbol) + \" - \" + _toDisplayString(stock.company_name) + \" \", 1 /* TEXT */), _createCommentVNode(\" Add other fields as needed \")]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","hotStocks","stock","key","stock_symbol","_toDisplayString","company_name","_createCommentVNode"],"sources":["D:\\git_cooperation\\Stock-Predict-Pro\\code\\Stock_Predict_Pro\\vue\\src\\views\\NewPage.vue"],"sourcesContent":["<!-- // YourComponent.vue -->\r\n<template>\r\n    <div>\r\n        <h1>Hot Stocks</h1>\r\n        <ul>\r\n            <li v-for=\"stock in hotStocks\" :key=\"stock.stock_symbol\">\r\n                {{ stock.stock_symbol }} - {{ stock.company_name }}\r\n                <!-- Add other fields as needed -->\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      hotStocks: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchHotStocks();\r\n  },\r\n  methods: {\r\n    fetchHotStocks() {\r\n      axios.get('http://localhost:8000/api/hot_stocks/')\r\n        .then(response => {\r\n          this.hotStocks = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching hot stocks:', error);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":";gCAGQA,mBAAA,CAAmB,YAAf,YAAU;;uBADlBC,mBAAA,CAQM,cAPFC,UAAmB,EACnBF,mBAAA,CAKK,c,kBAJDC,mBAAA,CAGKE,SAAA,QAAAC,WAAA,CAHeC,KAAA,CAAAC,SAAS,EAAlBC,KAAK;yBAAhBN,mBAAA,CAGK;MAH2BO,GAAG,EAAED,KAAK,CAACE;0CACpCF,KAAK,CAACE,YAAY,IAAG,KAAG,GAAAC,gBAAA,CAAGH,KAAK,CAACI,YAAY,IAAG,GACnD,iBAAAC,mBAAA,gCAAmC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}